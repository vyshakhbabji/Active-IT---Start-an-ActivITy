/*
 * JS for EventsDisplay generated by Appery.io
 *
 */

Appery.getProjectGUID = function() {
    return 'd622a8af-a8d6-4ae9-a795-f5cb14b11caf';
}

function navigateTo(outcome, useAjax) {
    Appery.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Appery.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Appery.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Appery.setDetailContent(pageUrl);
}

Appery.AppPages = [{
    "name": "SignIn",
    "location": "SignIn.html"
}, {
    "name": "FinalResult",
    "location": "FinalResult.html"
}, {
    "name": "startScreen",
    "location": "startScreen.html"
}, {
    "name": "searchPeople",
    "location": "searchPeople.html"
}, {
    "name": "EventsDisplay",
    "location": "EventsDisplay.html"
}];

EventsDisplay_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {

    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Appery.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Appery.CurrentScreen = 'EventsDisplay';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    EventsDisplay_beforeshow = function() {
        Appery.CurrentScreen = "EventsDisplay";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_3D0A_onLoad = EventsDisplay_onLoad = function() {
        screen_3D0A_elementsExtraJS();

        // TODO fire device events only if necessary (with JS logic)
        EventsDisplay_deviceEvents();
        EventsDisplay_windowEvents();
        screen_3D0A_elementsEvents();
    }

    // screen window events
    screen_3D0A_windowEvents = EventsDisplay_windowEvents = function() {

        $('#EventsDisplay').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });

    }

    // device events
    EventsDisplay_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

            $(document).bind("resume", function() {
                window.plugins.pushNotification.getPendingNotifications(function(status) {
                    var notifications = status.notifications;
                    for (var i = 0; i < notifications.length; ++i) {
                        window.plugins.pushNotification.notificationCallback(notifications[i]);
                    }
                });
            });
        });
    }

    // screen elements extra js
    screen_3D0A_elementsExtraJS = EventsDisplay_elementsExtraJS = function() {
        // screen (EventsDisplay) extra code

    }

    // screen elements handler
    screen_3D0A_elementsEvents = EventsDisplay_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

    }

    $("#EventsDisplay").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        EventsDisplay_beforeshow();
    });

    if (runBeforeShow) {
        EventsDisplay_beforeshow();
    } else {
        EventsDisplay_onLoad();
    }

}

$("#EventsDisplay").die("pageinit").live("pageinit", function(event, ui) {
    Appery.processSelectMenu($(this));
    EventsDisplay_js();
});